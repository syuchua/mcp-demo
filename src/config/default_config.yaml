# API 配置
api:
  openai_api_key: ""  # 若留空，将从环境变量读取
  base_url: "https://api.yuchu.me/v1" 

# 模型配置
models:
  available:
    - "gpt-4o"
    - "gpt-4o-mini"
    - "gemini-2.0-flash"
    - "gemini-2.5-pro"
    - "deepseek-v3"
    - "deepseek-r1"
    - "o1"
    - "o3-mini"
    - "gpt-4.1"
  selected: "gpt-4o-mini"  # 默认模型

# 系统设置
system:
  message: |
    你是一个基于 MCP 框架的 AI 助手，可以使用多种工具帮助用户完成任务。
    
    你可以访问以下 MCP 服务器，每个服务器提供不同的工具：
    1. weather - 提供美国天气查询服务，包括城市天气预报和警报
    2. 高德 - 提供国内天气、地理位置、导航和搜索服务，适合处理地图相关查询
    3. everything-server - 提供本地文件搜索服务，适合处理文件相关查询
    4. system_tools - 提供系统工具和应用程序控制以及文件操作
    
    当用户提问时，请先判断需要使用哪个服务器，然后通过指令 !use_server:<服务器名称> 选择合适的服务器。
    示例:
    1. 用户: "查询北京明天的天气"
       回复: "!use_server:高德 正在查询北京的天气..."
    
    2. 用户: "纽约现在下雨吗？"
       回复: "!use_server:weather 让我查看纽约的天气..."
    
    3. 用户: "帮我找到所有的PDF文件"
       回复: "!use_server:everything 正在搜索所有PDF文件..."
    
    4. 用户: "查看我最近编辑的Python代码"
       回复: "!use_server:everything 正在查找最近修改的Python文件..."
    5. 用户: "打开记事本"
       回复: "!use_server:system_tools 正在打开记事本..."
    
    如果需要切换服务器，也可以使用同样的指令。请不要向用户展示此指令。
  
  debug: true
  timeout: 60.0
  auto_server_selection: true  # 启用自动服务器选择
  preload_servers: ["weather"] # 预加载的服务器

# 服务器设置
servers:
  directory: "mcp-server"  
  default: "weather"
  server_types:
    # 本地脚本服务器
    - name: "stdio"
      description: "通过标准输入输出连接到本地脚本"
    
    # SSE 服务器
    - name: "sse"
      description: "通过 HTTP/SSE 连接到远程 MCP 服务器"
    
    # 本地命令启动服务器
    - name: "command"
      description: "通过本地命令启动 MCP 服务器"

  # 具体服务器配置
  instances:
    # 标准脚本类型
    - name: "weather"
      type: "stdio" 
      script: "weather.py"
      description: "本地天气服务（调用美国气象局接口，不支持中国）"
    
    # SSE 类型
    - name: "高德"
      type: "sse"
      url: "https://mcp.amap.com/sse?key=YOUR_API_KEY"
      description: "高德地图mcp-server"
    
    # 命令类型
    - name: "everything"
      type: "stdio"
      command: "uvx"
      args: ["mcp-server-everything-search"]
      env:
        EVERYTHING_SDK_PATH: "D:\\dev\\tools\\Everything-SDK\\dll\\Everything64.dll"
      description: "Everything 搜索服务（需要安装 Everything）"

    - name: "system_tools"
      type: "stdio"
      script: "system_tools.py"
      description: "系统工具和应用程序控制"